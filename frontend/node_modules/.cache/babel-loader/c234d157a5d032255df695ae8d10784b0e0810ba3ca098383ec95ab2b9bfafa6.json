{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\greeny\\\\Documents\\\\ytdownload\\\\tracker-app\\\\frontend\\\\src\\\\components\\\\Checklist.jsx\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE = process.env.REACT_APP_API_BASE;\nexport default function Checklist({\n  tasks,\n  refresh\n}) {\n  const toggleTask = async taskId => {\n    try {\n      await axios.post(`${API_BASE}/tasks/toggle`, {\n        id: taskId\n      });\n      refresh();\n    } catch (err) {\n      console.error(\"Failed to toggle task:\", err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"checklist\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), tasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: task.completed,\n        onChange: () => toggleTask(task.id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this), task.name, \" (\", task.person, \")\"]\n    }, task.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n_c = Checklist;\nvar _c;\n$RefreshReg$(_c, \"Checklist\");","map":{"version":3,"names":["React","axios","jsxDEV","_jsxDEV","API_BASE","process","env","REACT_APP_API_BASE","Checklist","tasks","refresh","toggleTask","taskId","post","id","err","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","task","type","checked","completed","onChange","name","person","_c","$RefreshReg$"],"sources":["C:/Users/greeny/Documents/ytdownload/tracker-app/frontend/src/components/Checklist.jsx"],"sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst API_BASE = process.env.REACT_APP_API_BASE;\r\n\r\nexport default function Checklist({ tasks, refresh }) {\r\n  const toggleTask = async (taskId) => {\r\n    try {\r\n      await axios.post(`${API_BASE}/tasks/toggle`, { id: taskId });\r\n      refresh();\r\n    } catch (err) {\r\n      console.error(\"Failed to toggle task:\", err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"checklist\">\r\n      <h2>Tasks</h2>\r\n      {tasks.map((task) => (\r\n        <div key={task.id}>\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={task.completed}\r\n            onChange={() => toggleTask(task.id)}\r\n          />\r\n          {task.name} ({task.person})\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,QAAQ,GAAGC,OAAO,CAACC,GAAG,CAACC,kBAAkB;AAE/C,eAAe,SAASC,SAASA,CAAC;EAAEC,KAAK;EAAEC;AAAQ,CAAC,EAAE;EACpD,MAAMC,UAAU,GAAG,MAAOC,MAAM,IAAK;IACnC,IAAI;MACF,MAAMX,KAAK,CAACY,IAAI,CAAC,GAAGT,QAAQ,eAAe,EAAE;QAAEU,EAAE,EAAEF;MAAO,CAAC,CAAC;MAC5DF,OAAO,CAAC,CAAC;IACX,CAAC,CAAC,OAAOK,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,wBAAwB,EAAEF,GAAG,CAAC;IAC9C;EACF,CAAC;EAED,oBACEZ,OAAA;IAAKe,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBhB,OAAA;MAAAgB,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACbd,KAAK,CAACe,GAAG,CAAEC,IAAI,iBACdtB,OAAA;MAAAgB,QAAA,gBACEhB,OAAA;QACEuB,IAAI,EAAC,UAAU;QACfC,OAAO,EAAEF,IAAI,CAACG,SAAU;QACxBC,QAAQ,EAAEA,CAAA,KAAMlB,UAAU,CAACc,IAAI,CAACX,EAAE;MAAE;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrC,CAAC,EACDE,IAAI,CAACK,IAAI,EAAC,IAAE,EAACL,IAAI,CAACM,MAAM,EAAC,GAC5B;IAAA,GAPUN,IAAI,CAACX,EAAE;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAOZ,CACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACS,EAAA,GAzBuBxB,SAAS;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}