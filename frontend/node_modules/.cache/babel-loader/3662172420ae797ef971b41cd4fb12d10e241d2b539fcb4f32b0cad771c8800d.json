{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\greeny\\\\Documents\\\\ytdownload\\\\tracker-app\\\\frontend\\\\src\\\\components\\\\Countdown.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Countdown({\n  lastReset,\n  onReset\n}) {\n  _s();\n  const [timeLeft, setTimeLeft] = useState(0);\n  useEffect(() => {\n    const updateCountdown = () => {\n      const now = new Date();\n      const resetTime = new Date(lastReset);\n      resetTime.setDate(resetTime.getDate() + 1);\n      const diff = resetTime - now;\n      if (diff <= 0) {\n        onReset();\n      } else {\n        setTimeLeft(diff);\n      }\n    };\n    const interval = setInterval(updateCountdown, 1000);\n    updateCountdown();\n    return () => clearInterval(interval);\n  }, [lastReset, onReset]);\n  const formatTime = ms => {\n    const totalSeconds = Math.floor(ms / 1000);\n    const h = Math.floor(totalSeconds / 3600);\n    const m = Math.floor(totalSeconds % 3600 / 60);\n    const s = totalSeconds % 60;\n    return `${h}h ${m}m ${s}s`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"countdown\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Time left until next reset:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: formatTime(timeLeft)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(Countdown, \"+8R8qG0ytIJ3hDO9yvGoGENFV+4=\");\n_c = Countdown;\nvar _c;\n$RefreshReg$(_c, \"Countdown\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Countdown","lastReset","onReset","_s","timeLeft","setTimeLeft","updateCountdown","now","Date","resetTime","setDate","getDate","diff","interval","setInterval","clearInterval","formatTime","ms","totalSeconds","Math","floor","h","m","s","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/greeny/Documents/ytdownload/tracker-app/frontend/src/components/Countdown.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nexport default function Countdown({ lastReset, onReset }) {\r\n  const [timeLeft, setTimeLeft] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const updateCountdown = () => {\r\n      const now = new Date();\r\n      const resetTime = new Date(lastReset);\r\n      resetTime.setDate(resetTime.getDate() + 1);\r\n      const diff = resetTime - now;\r\n      if (diff <= 0) {\r\n        onReset();\r\n      } else {\r\n        setTimeLeft(diff);\r\n      }\r\n    };\r\n\r\n    const interval = setInterval(updateCountdown, 1000);\r\n    updateCountdown();\r\n\r\n    return () => clearInterval(interval);\r\n  }, [lastReset, onReset]);\r\n\r\n  const formatTime = (ms) => {\r\n    const totalSeconds = Math.floor(ms / 1000);\r\n    const h = Math.floor(totalSeconds / 3600);\r\n    const m = Math.floor((totalSeconds % 3600) / 60);\r\n    const s = totalSeconds % 60;\r\n    return `${h}h ${m}m ${s}s`;\r\n  };\r\n\r\n  return (\r\n    <div className=\"countdown\">\r\n      <h2>Time left until next reset:</h2>\r\n      <div>{formatTime(timeLeft)}</div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,eAAe,SAASC,SAASA,CAAC;EAAEC,SAAS;EAAEC;AAAQ,CAAC,EAAE;EAAAC,EAAA;EACxD,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EAE3CC,SAAS,CAAC,MAAM;IACd,MAAMS,eAAe,GAAGA,CAAA,KAAM;MAC5B,MAAMC,GAAG,GAAG,IAAIC,IAAI,CAAC,CAAC;MACtB,MAAMC,SAAS,GAAG,IAAID,IAAI,CAACP,SAAS,CAAC;MACrCQ,SAAS,CAACC,OAAO,CAACD,SAAS,CAACE,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC;MAC1C,MAAMC,IAAI,GAAGH,SAAS,GAAGF,GAAG;MAC5B,IAAIK,IAAI,IAAI,CAAC,EAAE;QACbV,OAAO,CAAC,CAAC;MACX,CAAC,MAAM;QACLG,WAAW,CAACO,IAAI,CAAC;MACnB;IACF,CAAC;IAED,MAAMC,QAAQ,GAAGC,WAAW,CAACR,eAAe,EAAE,IAAI,CAAC;IACnDA,eAAe,CAAC,CAAC;IAEjB,OAAO,MAAMS,aAAa,CAACF,QAAQ,CAAC;EACtC,CAAC,EAAE,CAACZ,SAAS,EAAEC,OAAO,CAAC,CAAC;EAExB,MAAMc,UAAU,GAAIC,EAAE,IAAK;IACzB,MAAMC,YAAY,GAAGC,IAAI,CAACC,KAAK,CAACH,EAAE,GAAG,IAAI,CAAC;IAC1C,MAAMI,CAAC,GAAGF,IAAI,CAACC,KAAK,CAACF,YAAY,GAAG,IAAI,CAAC;IACzC,MAAMI,CAAC,GAAGH,IAAI,CAACC,KAAK,CAAEF,YAAY,GAAG,IAAI,GAAI,EAAE,CAAC;IAChD,MAAMK,CAAC,GAAGL,YAAY,GAAG,EAAE;IAC3B,OAAO,GAAGG,CAAC,KAAKC,CAAC,KAAKC,CAAC,GAAG;EAC5B,CAAC;EAED,oBACExB,OAAA;IAAKyB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxB1B,OAAA;MAAA0B,QAAA,EAAI;IAA2B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpC9B,OAAA;MAAA0B,QAAA,EAAMT,UAAU,CAACZ,QAAQ;IAAC;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9B,CAAC;AAEV;AAAC1B,EAAA,CApCuBH,SAAS;AAAA8B,EAAA,GAAT9B,SAAS;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}